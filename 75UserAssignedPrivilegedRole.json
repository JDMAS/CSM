{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/','75000000-0000-0000-0000-000000000000')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','75000000-0000-0000-0000-000000000000')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2022-09-01-preview",
            "properties": {
                "displayName": "[concat(parameters('workspace'),' - User Assigned Privileged Role')]",
                "description": "Identifies when a privileged role is assigned to a new user. Any account eligible for a role is now being given privileged access. If the assignment is unexpected or into a role that isn't the responsibility of the account holder, investigate.",
                "severity": "High",
                "enabled": true,
                "query": "// Define the start and end times based on input values\nlet starttime = now() - 1d;\nlet endtime = now();\n// Set a lookback period of 14 days\nlet lookback = starttime - 14d;\n// Define a reusable function to query audit logs\nlet awsFunc = (start: datetime, end: datetime) {\n    AuditLogs\n    | where TimeGenerated between (start .. end)\n    | where Category =~ \"RoleManagement\"\n    | where AADOperationType in (\"Assign\", \"AssignEligibleRole\")\n    | where ActivityDisplayName has_any (\"Add eligible member to role\", \"Add member to role\")\n    | mv-apply TargetResource = TargetResources on\n        (\n        where TargetResource.type in~ (\"User\", \"ServicePrincipal\")\n        | extend\n            Target = iff(TargetResource.type =~ \"ServicePrincipal\", tostring(TargetResource.displayName), tostring(TargetResource.userPrincipalName)),\n            props = TargetResource.modifiedProperties\n        )\n    | mv-apply Property = props on\n        (\n        where Property.displayName =~ \"Role.DisplayName\"\n        | extend RoleName = trim('\"', tostring(Property.newValue))\n        )\n    | where RoleName contains \"Admin\" and Result == \"success\"\n};\n// Query for audit events in the current day\nlet EventInfo_CurrentDay = awsFunc(starttime, endtime);\n// Query for audit events in the historical period (lookback)\nlet EventInfo_historical = awsFunc(lookback, starttime);\n// Find unseen events by performing a left anti-join\nlet EventInfo_Unseen = (EventInfo_CurrentDay\n    | join kind=leftanti(EventInfo_historical) on Target, RoleName, OperationName\n    );\n// Extend and clean up the results\nEventInfo_Unseen\n| extend InitiatingApp = tostring(InitiatedBy.app.displayName)\n| extend Initiator = iif(isnotempty(InitiatingApp), InitiatingApp, tostring(InitiatedBy.user.userPrincipalName))\n// You can uncomment the lines below to filter out PIM activations\n| where Initiator != \"MS-PIM\"\n| summarize StartTime=min(TimeGenerated), EndTime=min(TimeGenerated) by OperationName, RoleName, Target, Initiator, Result, TimeGenerated\n// Project specific columns and split them for further analysis\n| project StartTime, OperationName, RoleName, Target, Initiator, Result\n| extend\n    TargetName = tostring(split(Target, '@', 0)[0]),\n    TargetUPNSuffix = tostring(split(Target, '@', 1)[0]),\n    InitiatorName = tostring(split(Initiator, '@', 0)[0]),\n    InitiatorUPNSuffix = tostring(split(Initiator, '@', 1)[0])\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "P14D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [
                    "Persistence"
                ],
                "techniques": [
                    "T1078"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "TargetName"
                            },
                            {
                                "identifier": "UPNSuffix",
                                "columnName": "TargetUPNSuffix"
                            }
                        ]
                    },
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "InitiatorName"
                            },
                            {
                                "identifier": "UPNSuffix",
                                "columnName": "InitiatorUPNSuffix"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": "1.0.8"
            }
        }
    ]
}