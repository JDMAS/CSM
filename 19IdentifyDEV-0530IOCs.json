{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/','19000000-0000-0000-0000-000000000000')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','19000000-0000-0000-0000-000000000000')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-10-01-preview",
      "properties": {
                "displayName": "[concat(parameters('workspace'),' - Dev-0530 - July 2022')]",
                "description": "Identifies a IOC match related to Dev-0530 actor across various data sources",
                "severity": "High",
        "enabled": true,
        "query": "let iocs = externaldata(DateAdded:string,IoC:string,Type:string) [@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/Dev-0530_July2022.csv\"] with (format=\"csv\", ignoreFirstRecord=True);\r\n  let sha256Hashes = (iocs | where Type =~ \"sha256\" | project IoC);\r\n  let IPList = (iocs | where Type =~ \"ip\"| project IoC);\r\n  (union isfuzzy=true \r\n  (DeviceProcessEvents\r\n  | where InitiatingProcessSHA256 in (sha256Hashes) or SHA256 in (sha256Hashes) or ( InitiatingProcessCommandLine has ('cmd.exe /Q /c schtasks /create /tn lockertask /tr') \r\n  and InitiatingProcessCommandLine has ('sc minute /mo 1 /F /ru system'))\r\n  | project TimeGenerated, ActionType, DeviceId, DeviceName, InitiatingProcessAccountDomain, InitiatingProcessAccountName, InitiatingProcessCommandLine, InitiatingProcessFolderPath, InitiatingProcessId, InitiatingProcessParentFileName, InitiatingProcessFileName,  InitiatingProcessSHA256, Type, AccountName, SHA256\r\n  | extend Account = AccountName, Computer = DeviceName,  CommandLine = InitiatingProcessCommandLine, FileHash = case(InitiatingProcessSHA256 in (sha256Hashes), \"InitiatingProcessSHA256\", SHA256 in (sha256Hashes), \"SHA256\", \"No Match\")\r\n  | extend timestamp = TimeGenerated, HostCustomEntity = Computer , AccountCustomEntity = Account, ProcessCustomEntity = InitiatingProcessFileName, FileHashCustomEntity = case(FileHash == \"InitiatingProcessSHA256\", InitiatingProcessSHA256, FileHash == \"SHA256\", SHA256, \"No Match\")\r\n  ),\r\n  ( SecurityEvent\r\n  | where EventID == 4688\r\n  | where ( CommandLine has ('cmd.exe /Q /c schtasks /create /tn lockertask /tr') and CommandLine has ('/sc minute /mo 1 /F /ru system'))\r\n  | project TimeGenerated, Computer, NewProcessName, ParentProcessName, Account, NewProcessId, Type, EventID, CommandLine\r\n  | extend timestamp = TimeGenerated, HostCustomEntity = Computer , AccountCustomEntity = Account, ProcessCustomEntity = NewProcessName\r\n  ),\r\n  ( imFileEvent\r\n  | where Hash in~ (sha256Hashes) or  ( ActingProcessCommandLine has ('cmd.exe /Q /c schtasks /create /tn lockertask /tr') and ActingProcessCommandLine has ('/sc minute /mo 1 /F /ru system'))\r\n  | extend Account = ActorUsername, Computer = DvcHostname, IPAddress = SrcIpAddr, CommandLine = ActingProcessCommandLine, FileHash = TargetFileSHA256\r\n  | project Type, TimeGenerated, Computer, Account, IPAddress, CommandLine, FileHash\r\n  | extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer, FileHashCustomEntity = FileHash\r\n  ),\r\n  (Event\r\n  | where Source == \"Microsoft-Windows-Sysmon\"\r\n  | where EventID == 1\r\n  | extend EvData = parse_xml(EventData)\r\n  | extend EventDetail = EvData.DataItem.EventData.Data\r\n  | extend Image = EventDetail.[4].[\"#text\"],  CommandLine = EventDetail.[10].[\"#text\"], Hashes = tostring(EventDetail.[17].[\"#text\"])\r\n  | extend Hashes = extract_all(@\"(?P<key>\\w+)=(?P<value>[a-zA-Z0-9]+)\", dynamic([\"key\",\"value\"]), Hashes)\r\n  | extend Hashes = column_ifexists(\"Hashes\", \"\"), CommandLine = column_ifexists(\"CommandLine\", \"\")\r\n  | where (Hashes has_any (sha256Hashes) ) or ( CommandLine has ('cmd.exe /Q /c schtasks /create /tn lockertask /tr') and CommandLine has ('/sc minute /mo 1 /F /ru system')) \r\n  | project TimeGenerated, EventDetail, UserName, Computer, Type, Source, Hashes, CommandLine, Image\r\n  | extend Type = strcat(Type, \": \", Source)\r\n  | extend timestamp = TimeGenerated, HostCustomEntity = Computer , AccountCustomEntity = UserName, ProcessCustomEntity = tostring(split(Image, '\\\\', -1)[-1]), FileHashCustomEntity = Hashes\r\n  ),\r\n  (DeviceFileEvents\r\n  | where SHA256 has_any (sha256Hashes)\r\n  | project TimeGenerated, ActionType, DeviceId, DeviceName, InitiatingProcessAccountDomain, InitiatingProcessAccountName, InitiatingProcessCommandLine, InitiatingProcessFolderPath, InitiatingProcessId, InitiatingProcessParentFileName, InitiatingProcessFileName, InitiatingProcessSHA256, Type\r\n  | extend timestamp = TimeGenerated, HostCustomEntity = DeviceName , AccountCustomEntity = InitiatingProcessAccountName, ProcessCustomEntity = InitiatingProcessFileName, AlgorithmCustomEntity = \"SHA256\", FileHashCustomEntity = InitiatingProcessSHA256,  CommandLine = InitiatingProcessCommandLine,Image = InitiatingProcessFolderPath\r\n  ),\r\n  (EmailEvents\r\n  | where SenderFromAddress == 'H0lyGh0st@mail2tor.com'\r\n  | extend timestamp = TimeGenerated, IPCustomEntity = SenderIPv4, AccountCustomEntity = SenderFromAddress \r\n  ),\r\n  (CommonSecurityLog \r\n  | where isnotempty(SourceIP) or isnotempty(DestinationIP) \r\n  | where SourceIP in (IPList) or DestinationIP in (IPList) or Message has_any (IPList) or FileHash in (sha256Hashes)\r\n  | extend IPMatch = case(SourceIP in (IPList), \"SourceIP\", DestinationIP in (IPList), \"DestinationIP\", \"Message\")  \r\n  | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by SourceIP, DestinationIP, DeviceProduct, DeviceAction, Message, Protocol, SourcePort, DestinationPort, DeviceAddress, DeviceName, IPMatch , FileHash\r\n  | extend timestamp = StartTimeUtc, IPCustomEntity = case(IPMatch == \"SourceIP\", SourceIP, IPMatch == \"DestinationIP\", DestinationIP, \"IP in Message Field\")  \r\n  ), \r\n  (OfficeActivity \r\n  |extend SourceIPAddress = ClientIP, Account = UserId \r\n  | where  SourceIPAddress in (IPList) \r\n  | extend timestamp = TimeGenerated , IPCustomEntity = SourceIPAddress , AccountCustomEntity = Account \r\n  ),\r\n  (SigninLogs \r\n  | where isnotempty(IPAddress) \r\n  | where IPAddress in (IPList) \r\n  | extend timestamp = TimeGenerated, AccountCustomEntity = UserPrincipalName, IPCustomEntity = IPAddress \r\n  ),\r\n  (AADNonInteractiveUserSignInLogs \r\n  | where isnotempty(IPAddress) \r\n  | where IPAddress in (IPList) \r\n  | extend timestamp = TimeGenerated, AccountCustomEntity = UserPrincipalName, IPCustomEntity = IPAddress \r\n  ), \r\n  (W3CIISLog  \r\n  | where isnotempty(cIP) \r\n  | where cIP in (IPList) \r\n  | extend timestamp = TimeGenerated, IPCustomEntity = cIP, HostCustomEntity = Computer, AccountCustomEntity = csUserName \r\n  ), \r\n  (AzureActivity  \r\n  | where isnotempty(CallerIpAddress) \r\n  | where CallerIpAddress in (IPList) \r\n  | extend timestamp = TimeGenerated, IPCustomEntity = CallerIpAddress, AccountCustomEntity = Caller \r\n  ), \r\n  ( \r\n  AWSCloudTrail \r\n  | where isnotempty(SourceIpAddress) \r\n  | where SourceIpAddress in (IPList) \r\n  | extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName \r\n  ), \r\n  ( \r\n  DeviceNetworkEvents \r\n  | where isnotempty(RemoteIP)  \r\n  | where RemoteIP in (IPList)  \r\n  | extend timestamp = TimeGenerated, IPCustomEntity = RemoteIP, HostCustomEntity = DeviceName  \r\n  ),\r\n  (\r\n  AzureDiagnostics\r\n  | where ResourceType == \"AZUREFIREWALLS\"\r\n  | where Category == \"AzureFirewallApplicationRule\"\r\n  | parse msg_s with Protocol 'request from ' SourceHost ':' SourcePort 'to ' DestinationHost ':' DestinationPort '. Action:' Action\r\n  | where isnotempty(DestinationHost)\r\n  | where DestinationHost has_any (IPList)  \r\n  | extend DestinationIP = DestinationHost \r\n  | extend IPCustomEntity = SourceHost\r\n  ),\r\n  (\r\n  AzureDiagnostics\r\n  | where ResourceType == \"AZUREFIREWALLS\"\r\n  | where Category == \"AzureFirewallNetworkRule\"\r\n  | parse msg_s with Protocol 'request from ' SourceHost ':' SourcePort 'to ' DestinationHost ':' DestinationPort '. Action:' Action\r\n  | where isnotempty(DestinationHost)\r\n  | where DestinationHost has_any (IPList)  \r\n  | extend DestinationIP = DestinationHost \r\n  | extend IPCustomEntity = SourceHost\r\n  )\r\n  )",
        "queryFrequency": "PT12H",
        "queryPeriod": "PT12H",
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "suppressionDuration": "PT5H",
        "suppressionEnabled": false,
                "tactics": [
                    "Impact"
                ],
                "techniques": [
                    "T1486"
                ],
        "alertRuleTemplateName": null,
        "incidentConfiguration": {
          "createIncident": true,
          "groupingConfiguration": {
            "enabled": false,
            "reopenClosedIncident": false,
            "lookbackDuration": "PT5H",
            "matchingMethod": "AllEntities",
            "groupByEntities": [],
            "groupByAlertDetails": [],
            "groupByCustomDetails": []
          }
        },
        "eventGroupingSettings": {
          "aggregationKind": "SingleAlert"
        },
        "alertDetailsOverride": null,
        "customDetails": null,
                        "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "AccountCustomEntity"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "HostCustomEntity"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "IPCustomEntity"
                            }
                        ]
                    },
                    {
                        "entityType": "FileHash",
                        "fieldMappings": [
                            {
                                "identifier": "Algorithm",
                                "columnName": "AlgorithmCustomEntity"
                            },
                            {
                                "identifier": "Value",
                                "columnName": "FileHashCustomEntity_dynamic"
                            }
                        ]
                    },
                    {
                        "entityType": "Process",
                        "fieldMappings": [
                            {
                                "identifier": "ProcessId",
                                "columnName": "ProcessCustomEntity"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null
            }
        }
    ]
}