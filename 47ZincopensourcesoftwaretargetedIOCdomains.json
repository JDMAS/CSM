{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/','47000000-0000-0000-0000-000000000000')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','47000000-0000-0000-0000-000000000000')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2022-09-01-preview",
            "properties": {
                "displayName": "[concat(parameters('workspace'),' - Identify ZINC IP/domain/hash IOC')]",
                "description": "Identifies a match across domainname, IP, hash and useragent IOCs related to an actor tracked by Microsoft as Zinc.
  Reference: https://www.microsoft.com/security/blog/2022/09/29/zinc-weaponizing-open-source-software/",
                "severity": "High",
                "enabled": true,
                "query": " let iocs = externaldata(DateAdded:string,IoC:string,Type:string) [@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/ZincOctober2022IOCs.csv\"] with (format=\"csv\", ignoreFirstRecord=True);\r\n  let domains = (iocs | where Type =~ \"domainname\"| project IoC);\r\n  let IPList = (iocs | where Type =~ \"ip\"| project IoC);\r\n  let sha256Hashes = (iocs | where Type =~ \"sha256\" | project IoC);\r\n  let useragents = (iocs | where Type =~ \"useragent\" | project IoC);\r\n  (union isfuzzy=true\r\n  (CommonSecurityLog\r\n  | where DestinationHostName has_any (domains) or RequestURL has_any (domains) or Message has_any (domains)\r\n  or  SourceIP has_any (IPList) or DestinationIP  has_any (IPList)\r\n  | parse Message with * '(' DNSName ')' *\r\n  | project TimeGenerated, Message, SourceUserID, RequestURL, DestinationHostName, Type, SourceIP, DestinationIP, DNSName\r\n  | extend timestamp = TimeGenerated, AccountCustomEntity = SourceUserID, UrlCustomEntity = RequestURL , IPCustomEntity = DestinationIP, DNSCustomEntity = DNSName\r\n  ),\r\n  (DnsEvents\r\n  | where Name in~ (domains) or IPAddresses has_any (IPList)\r\n  | project TimeGenerated, Computer, IPAddresses, Name, ClientIP, Type\r\n  | extend DNSName = Name, Host = Computer\r\n  | extend timestamp = TimeGenerated, HostCustomEntity = Host, DNSCustomEntity = DNSName, IPCustomEntity = IPAddresses\r\n  ),\r\n  (VMConnection\r\n  | where  RemoteDnsCanonicalNames has_any (domains)  or  SourceIp has_any (IPList) or DestinationIp has_any (IPList)\r\n  | parse RemoteDnsCanonicalNames with * '[\"' DNSName '\"]' *\r\n  | project TimeGenerated, Computer, Direction, RemoteDnsCanonicalNames, ProcessName, SourceIp, DestinationIp, DestinationPort, DNSName,BytesSent, BytesReceived, RemoteCountry, Type\r\n  | extend timestamp = TimeGenerated, IPCustomEntity = DestinationIp, HostCustomEntity = Computer, ProcessCustomEntity = ProcessName, DNSCustomEntity = DNSName\r\n  ),\r\n  (Event\r\n  | where Source == \"Microsoft-Windows-Sysmon\"\r\n  | where EventID == 3\r\n  | extend EvData = parse_xml(EventData)\r\n  | extend EventDetail = EvData.DataItem.EventData.Data\r\n  | extend SourceIP = tostring(EventDetail.[9].[\"#text\"]), DestinationIP = tostring(EventDetail.[14].[\"#text\"]), Image = EventDetail.[4].[\"#text\"]\r\n  | where  SourceIP has_any (IPList) or DestinationIP has_any (IPList)\r\n  | project TimeGenerated, SourceIP, DestinationIP, Image, UserName, Computer, EventDetail, Type\r\n  | extend timestamp = TimeGenerated, AccountCustomEntity = UserName, ProcessCustomEntity = tostring(split(Image, '\\\\', -1)[-1]), HostCustomEntity = Computer , IPCustomEntity = DestinationIP\r\n  ),  \r\n  (DeviceNetworkEvents\r\n  | where RemoteUrl has_any (domains) or RemoteIP has_any (IPList) or InitiatingProcessSHA256 in (sha256Hashes) \r\n  | project TimeGenerated, ActionType, DeviceId, DeviceName, InitiatingProcessAccountDomain, InitiatingProcessAccountName, InitiatingProcessCommandLine, InitiatingProcessFolderPath, InitiatingProcessId, InitiatingProcessParentFileName, InitiatingProcessFileName, RemoteIP, RemoteUrl, LocalIP, Type\r\n  | extend timestamp = TimeGenerated, IPCustomEntity = RemoteIP, HostCustomEntity = DeviceName, UrlCustomEntity =RemoteUrl\r\n  ),\r\n  (AzureDiagnostics\r\n  | where ResourceType == \"AZUREFIREWALLS\"\r\n  | where Category == \"AzureFirewallDnsProxy\"\r\n  | project TimeGenerated,Resource, msg_s, Type\r\n  | parse msg_s with \"DNS Request: \" ClientIP \":\" ClientPort \" - \" QueryID \" \" Request_Type \" \" Request_Class \" \" Request_Name \". \" Request_Protocol \" \" Request_Size \" \" EDNSO_DO \" \" EDNS0_Buffersize \" \" Responce_Code \" \" Responce_Flags \" \" Responce_Size \" \" Response_Duration\r\n  | where Request_Name has_any (domains) or ClientIP has_any (IPList)\r\n  | extend timestamp = TimeGenerated, DNSName = Request_Name, IPCustomEntity = ClientIP\r\n  ),\r\n  (AzureDiagnostics\r\n  | where ResourceType == \"AZUREFIREWALLS\"\r\n  | where Category == \"AzureFirewallApplicationRule\"\r\n  | project TimeGenerated,Resource, msg_s\r\n  | parse msg_s with Protocol 'request from ' SourceHost ':' SourcePort 'to ' DestinationHost ':' DestinationPort '. Action:' Action\r\n  | where DestinationHost has_any (domains) or SourceHost has_any (IPList)\r\n  | extend timestamp = TimeGenerated, DNSName = DestinationHost, IPCustomEntity = SourceHost\r\n  ),\r\n  (Event\r\n  | where Source == \"Microsoft-Windows-Sysmon\"\r\n  | where EventID == 1\r\n  | extend EvData = parse_xml(EventData)\r\n  | extend EventDetail = EvData.DataItem.EventData.Data\r\n  | parse EventDetail with * 'SHA256=' SHA256 '\",' *\r\n  | extend Image = EventDetail.[4].[\"#text\"],  CommandLine = EventDetail.[10].[\"#text\"]\r\n  | where SHA256 has_any (sha256Hashes)\r\n  | project TimeGenerated, EventDetail, UserName, Computer, Type, Source, SHA256, CommandLine, Image\r\n  | extend Type = strcat(Type, \": \", Source)\r\n  | extend timestamp = TimeGenerated, HostCustomEntity = Computer , AccountCustomEntity = UserName, ProcessCustomEntity = tostring(split(Image, '\\\\', -1)[-1]), AlgorithmCustomEntity = \"SHA256\", FileHashCustomEntity = SHA256\r\n  ),  \r\n  (DeviceProcessEvents\r\n  | where  InitiatingProcessSHA256 has_any (sha256Hashes)\r\n  | project TimeGenerated, ActionType, DeviceId, DeviceName, InitiatingProcessAccountDomain, InitiatingProcessAccountName, InitiatingProcessCommandLine, InitiatingProcessFolderPath, InitiatingProcessId, InitiatingProcessParentFileName, InitiatingProcessFileName, InitiatingProcessSHA256, FolderPath, Type\r\n  | extend timestamp = TimeGenerated, HostCustomEntity = DeviceName , AccountCustomEntity = InitiatingProcessAccountName, ProcessCustomEntity = InitiatingProcessFileName, AlgorithmCustomEntity = \"SHA256\", FileHashCustomEntity = InitiatingProcessSHA256\r\n  ),\r\n  (DeviceFileEvents\r\n  | where  InitiatingProcessSHA256 has_any (sha256Hashes)\r\n  | project TimeGenerated, ActionType, DeviceId, DeviceName, InitiatingProcessAccountDomain, InitiatingProcessAccountName, InitiatingProcessCommandLine, InitiatingProcessFolderPath, InitiatingProcessId, InitiatingProcessParentFileName, InitiatingProcessFileName, RequestAccountName, RequestSourceIP, InitiatingProcessSHA256, FolderPath, Type\r\n  | extend timestamp = TimeGenerated, HostCustomEntity = DeviceName , AccountCustomEntity = RequestAccountName, ProcessCustomEntity = InitiatingProcessFileName, AlgorithmCustomEntity = \"SHA256\", FileHashCustomEntity = InitiatingProcessSHA256\r\n  ),\r\n  (DeviceEvents\r\n  | where  InitiatingProcessSHA256 has_any (sha256Hashes)\r\n  | project TimeGenerated, ActionType, DeviceId, DeviceName, InitiatingProcessAccountDomain, InitiatingProcessAccountName, InitiatingProcessCommandLine, InitiatingProcessFolderPath, InitiatingProcessId, InitiatingProcessParentFileName, InitiatingProcessFileName, InitiatingProcessSHA256, FolderPath, Type\r\n  | extend CommandLine = InitiatingProcessCommandLine\r\n  | extend timestamp = TimeGenerated, HostCustomEntity = DeviceName , AccountCustomEntity = InitiatingProcessAccountName, ProcessCustomEntity = InitiatingProcessFileName, AlgorithmCustomEntity = \"SHA256\", FileHashCustomEntity = InitiatingProcessSHA256\r\n  ),\r\n  (OfficeActivity\r\n  | where ClientIP has_any (IPList) or UserAgent has_any (useragents)\r\n  | project TimeGenerated, UserAgent, Operation, RecordType, UserId, ClientIP, Type\r\n  | extend timestamp = TimeGenerated, IPCustomEntity = ClientIP, AccountCustomEntity = UserId\r\n  )\r\n  )",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "Persistence"
                ],
                "techniques": [
                    "T1546"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "AccountCustomEntity"
                            }
                        ]
                    },
                    {
                        "entityType": "FileHash",
                        "fieldMappings": [
                            {
                                "identifier": "Value",
                                "columnName": "FileHashCustomEntity"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "HostCustomEntity"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "IPCustomEntity"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null
            }
        }
    ]
}